@using TEST.Models;
@using TEST.Services;
@page "/universitydata";

<h1>Universities of Korea</h1>

<p>This component demonstrates fetching data from the server.</p>
<select id="country" @onchange="@(e => GetUniversitiesByCountry(e))">
    <option>Country</option>
    <option value="Korea,+Republic+of">Korea, Republic of</option>
    <option value="China">China</option>
    <option value="Japan">Japan</option>
</select>

@if (universities == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Country</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var university in universities.ToList())
            {
                <tr>
                    <td>@university.name</td>
                    <td>@university.country</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {


    protected IEnumerable<University> universities;

    [Inject]
    protected IUniversityService UniversityService { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //universities = await UniversityService.GetUniversities();
    }

    protected async Task GetUniversitiesByCountry(ChangeEventArgs e)
    {
        string country = e.Value.ToString();
        if (!string.IsNullOrEmpty(country)) {
            universities = await UniversityService.GetUniversities(country);
        }
    }
}
